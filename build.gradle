buildscript {
    ext {
        kotlinVersion = '1.3.61'
        springBootVersion = '2.2.4.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("io.spring.gradle:propdeps-plugin:0.0.10.RELEASE")
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'

    springBoot {
        buildInfo()
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/release" }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://jitpack.io' }
    }

    dependencies {

        // kotlin
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        compile("org.jetbrains.kotlin:kotlin-reflect")

        // spring boot
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-security')

        // 自动加载配置
        compileOnly('org.springframework.boot:spring-boot-configuration-processor')
        annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
        testCompileOnly('org.springframework.boot:spring-boot-configuration-processor')
        testAnnotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

        // test
        testCompile('org.springframework.boot:spring-boot-starter-test')

        // java9支持
        compile('javax.xml.bind:jaxb-api:2.3.0')

        // lombok
        compileOnly('org.projectlombok:lombok:1.16.20')

        compileOnly("com.alibaba:fastjson:1.2.47")

        // dubbo
        implementation('com.alibaba.spring.boot:dubbo-spring-boot-starter:2.0.0') {
            exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        }
        implementation('com.101tec:zkclient:0.10') {
            exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        }
    }

    sourceCompatibility = 1.8
    sourceSets.main.java.srcDirs('src/main/kotlin')
    sourceSets.main.kotlin.srcDirs('src/main/kotlin')

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
}